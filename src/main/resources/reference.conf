akka {
## activate remoting below if porter.mode=="remote"
#  actor {
#    provider = "akka.remote.RemoteActorRefProvider"
#  }
#  remote {
#    enabled-transports = [ "akka.remote.netty.tcp" ]
#    netty.tcp {
#      hostname = "127.0.0.1"
#      port = 7557
#    }
#  }
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
}
spray.can {
  # follow redirects by default. see
  # http://spray.io/documentation/1.2.1/spray-can/http-client/#redirection-following
  host-connector.max-redirects = 10
}

sitebag {
  mongodb-url = "mongodb://localhost:27017/"
  dbname = "sitebagdb"

  bind-host = "0.0.0.0"
  bind-port = 9995
  url-base = "http://"${sitebag.bind-host}":"${sitebag.bind-port}"/"

  trust-all-ssl = true

  enable-web-ui = true
  log-requests = false

  lucene {
    index-dir = var/lucene
    index-receive-timeout = 20s
  }

  extractors: [
    { class: "org.eknet.sitebag.content.HtmlExtractor", params: {} }
    { class: "org.eknet.sitebag.content.TextplainExtractor", params: {} }
  ]

  webui {
    brandname = "SiteBag"
    bootswatch-api-url = "http://api.bootswatch.com/3/"
    enable-change-password = true

    enable-highlightjs = true
    highlightjs-theme = "default"
  }
  porter {
    # remote or embedded
    mode = "embedded"

    realm = "default"

    remote {
      # when mode='remote', this uri is used to lookup remote porter actor
      url = "akka.tcp://porter@127.0.0.1:4554/user/porter/api"
    }

    embedded {
      validators: [
        { class: "porter.auth.PasswordValidator", params: {} }
        { class: "porter.auth.DigestValidator", params: {} }
        { class: "porter.auth.DerivedValidator", params: {} }
      ]

      # mutable and read-only store implementations can be specified here.
      stores: [
        { class: "porter.app.MongoStore", params: { uri = ${sitebag.mongodb-url}, dbname = ${sitebag.dbname} }, realms: [] }
      ]

      # Specify additional PermissionFactories here, which are PartialFunction[String, Permission]
      # They will be tried before the default factories.
      # Specify a FQCN and optinal parameters, like
      #   { class: "com.package.SomePermissionFactory", params: {} }
      permissionFactories: []

      telnet {
        enabled = true
        host = ${sitebag.bind-host}
        port = 9996
      }
    }
  }
}