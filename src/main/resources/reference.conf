akka {
#  actor {
#    provider = "akka.remote.RemoteActorRefProvider"
#  }
#  remote {
#    enabled-transports = [ "akka.remote.netty.tcp" ]
#    netty.tcp {
#      hostname = "127.0.0.1"
#      port = 4554
#    }
#  }
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
}

sitebag {
  mongodb-url = "mongodb://localhost:27017/"
  dbname = "sitebagdb"

  porter {
    # remote or embedded
    mode = "embedded"

    realm = "default"

    remote {
      # when mode='remote', this uri is used to lookup remote porter actor
      url = "akka.tcp://porter@127.0.0.1:2345/user/porter/api"
    }

    embedded {
      validators: [
        { class: "porter.auth.PasswordValidator", params: {} }
        { class: "porter.auth.DigestValidator", params: {} }
        { class: "porter.auth.DerivedValidator", params: {} }
      ]

      # mutable and read-only store implementations can be specified here.
      stores: [
        # MongoStore is mutable and requires a running mongodb server
        # params contains the connection params. If an uri is supplied, it is prefered,
        # otherwise host and port are used.
        #{ class: "porter.app.MongoStore", params: { uri = ${sitebag.mongodb-url}, dbname = ${sitebag.dbname} }, realms: [] }
      ]

      # Specify additional PermissionFactories here, which are PartialFunction[String, Permission]
      # They will be tried before the default factories.
      # Specify a FQCN and optinal parameters, like
      #   { class: "com.package.SomePermissionFactory", params: {} }
      permissionFactories: []

      telnet {
        enabled = true
        host = localhost
        port = 2345
      }
    }
  }
}